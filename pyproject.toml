[tool]
[tool.poetry]
name = "requests_oauth2client"
version = "1.7.0"
homepage = "https://github.com/guillp/requests_oauth2client"
description = "An OAuth2.x client based on `requests`."
authors = ["Guillaume Pujol <guillp.dev@pm.me>"]
readme = "README.md"
license = "Apache-2.0"
classifiers = [
    'Development Status :: 4 - Beta',
    'Intended Audience :: Developers',
    'Topic :: Security',
    'License :: OSI Approved :: Apache Software License',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
]
packages = [
    { include = "requests_oauth2client" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.8"

requests = ">=2.19.0"
binapy = ">=0.8"
furl = ">=2.1.2"
jwskate = ">=0.11.1"
attrs = ">=23.2.0"


[tool.poetry.dev-dependencies]
coverage = ">=7.6.1"
flask = ">=3.0.3"
livereload = ">=2.6.3"
mypy = ">=1.8"
mkdocs = ">=1.3.1"
mkdocs-autorefs = ">=0.3.0"
mkdocs-include-markdown-plugin = ">=6"
mkdocs-material = ">=9.5.3"
mkdocs-material-extensions = ">=1.0.1"
mkdocstrings = { version = ">=0.18.0", extras = ["python"] }
pre-commit = ">=3.5.0"
pytest = ">=7.0.1"
pytest-cov = ">=3.0.0"
pytest-freezer = ">=0.4.8"
pytest-mock = "^3.14.0"
pytest-mypy = ">=0.9.1"
requests-mock = ">=1.9.3"
toml = ">=0.10.2"
tox = ">=4"
types-requests = ">=2.25.10"
types-cryptography = ">=3.3.15"
virtualenv = ">=20.2.2"


[tool.poetry.extras]
test = ["pytest", "pytest-cov"]
doc = [
    "mdformat",
    "mkdocs",
    "mkdocs-autorefs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocs-material-extensions",
    "mkdocstrings"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
source = ["requests_oauth2client"]

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "def main",
    "if TYPE_CHECKING:",
]

[tool.docformatter]
black = true
recursive = true
wrap-summaries = 120
wrap-descriptions = 120
blank = true

[tool.ruff]
target-version = "py38"
line-length = 120


[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN401", # any-type in function args
    "N818", # Exception names should be named with an Error suffix
    "PLR0912", # Too many branches
    "D105", # Undocumented magic method
    "D107", # Missing docstring in `__init__`
    "S105", # Possible hardcoded password
    "COM812",
    "ISC001",
]

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = ["ARG001", "B018", "D100", "D101", "D102", "D103", "D104", "F821", "PGH005", "PLR0913", "PLR0915", "PLR2004", "S101", "S106", "S113",
"PT011", "E501"]

[tool.ruff.lint.pylint]
max-args = 10

[tool.ruff.lint.pydocstyle]
convention = "google"
ignore-decorators = ['override']

[tool.mypy]
strict = true
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true


[tool.pytest.ini_options]
requests_mock_case_sensitive = true
markers = [
    "slow: marks tests as slow"
]
filterwarnings = [
    "ignore::DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead."
]
